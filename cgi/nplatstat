#!/usr/bin/python -Wignore

import cgi
import sys
import traceback
import time
import os
import stat

sys.path.append('/home/mjuo/')
from teljoy.globals import *
from teljoy.extras import tjclient

DFILTER = 'I'   # Default filter for new objects created
DEXPTIME = 60   # Default exposure time for new objects created

HTMLheader="""
<META HTTP-EQUIV="Refresh" CONTENT="5;URL=nplatstat">
<html>
<head>
<title>B&C Telescope Status</title>
</head>
<body BGCOLOR=000000 TEXT=FFFFFF LINK=cc99ff VLINK=cc99ff>
"""

HTMLtrailer="""
<p>
</body>
</html>
"""

def AddObjURL(status):
  "Return a URL pointing to the 'Add Object' CGI"
  if status.current.Ra and status.current.Dec and (not status.current.posviolate):
    return 'Click <A href="secure/nobjedit?new=1&'+ \
           'ObjID='+status.current.ObjID+'&'+ \
           'ObjRA='+sexstring(status.current.Ra/15/3600)+'&'+ \
           'ObjDec='+sexstring(status.current.Dec/3600)+'&'+ \
           'ObjEpoch='+str(status.current.Epoch)+'&'+ \
           'filtname=%s&' % DFILTER + \
           'exptime='+str(DEXPTIME)+'&'+ \
           'xg=0&'+ \
           'yg=0">'+ \
           'HERE</A> to add the current object to the database. &nbsp; &nbsp;'
  else:
    return 'Current position can not be stored in the database. &nbsp; &nbsp;'


def trow(s):
  return "<tr> %s</tr>\n" % s

def head(s):
  return "<th> %s</th>" % s

def data(s):
  if s:
    return "<td>%s</td>" % s
  else:
    return "<td>&nbsp;</td>"


def since(tm):
  """Return a string containing the time in seconds since the epoch supplied.
  """
  return `int(time.time()-tm)`+' sec'



def TJParams(status):
  "Write a table with the current telescope/object parameters"
  tmp="<B>Teljoy Status</B>\n <table border=1>\n"
  tmp += trow(data("") + head("Value"))
  tmp += trow(head("Object ID") + data(status.current.ObjID))
  if status.current.Ra and status.current.Dec and (not status.current.posviolate):
    tmp += trow(head("RA") + data(sexstring(status.current.Ra/15/3600)))
    tmp += trow(head("Dec") + data(sexstring(status.current.Dec/3600)))
    tmp += trow(head("Epoch") + data(str(status.current.Epoch)))
  elif status.current.RaC and status.current.DecC:
    tmp += trow(head("RA") + data(sexstring(status.current.RaC/15/3600)))
    tmp += trow(head("Dec") + data(sexstring(status.current.DecC/3600)))
    tmp += trow(head("Epoch") + data("Raw"))
  else:
    tmp += trow(head("RA") + data('--'))
    tmp += trow(head("Dec") + data('--'))
    tmp += trow(head("Epoch") + data('--'))

  tmp += trow(head("Alt") + data(sexstring(status.current.Alt)))
  tmp += trow(head("Azi") + data(sexstring(status.current.Azi)))
  tmp += trow(head("LST") + data(sexstring(status.current.Time.LST)))
  flags=''
  if status.current.posviolate:
    flags += 'P'
  else:
    flags += '.'
  if status.motors.Moving:
    flags += 'M'
  else:
    flags += '.'
  if status.prefs.EastOfPier:
    flags += 'E'
  else:
    flags += '.'
  if status.dome.DomeInUse:
    flags += 'D'
  else:
    flags += '.'
  if status.dome.ShutterInUse:
    flags += 'S'
  else:
    flags += '.'
  if status.dome.DomeTracking:
    flags += 'T'
  else:
    flags += '.'
  if status.motors.Frozen:
    flags += 'F'
  else:
    flags += '.'
  if not status.dome.ShutterOpen:
    flags += 'C'
  else:
    flags += '.'
  tmp += trow(head("Flags") + data(flags))
  tmp += trow(head("UT Date") + data(str(status.current.Time.UT)[:10]))
  tmp += trow(head("UT Time") + data(str(status.current.Time.UT)[11:-7]))
  tmp += "</table> \n"
  return tmp



def Exits():
  return '&nbsp; &nbsp; Go to <A href="al/aobjlist">Objects Database</A>'



if __name__ == '__main__':
  print "Content-Type: text/html\n\n"
  print HTMLheader

  msg = tjclient.Init()
  status = tjclient.status
  if not status.connected:
    print "Error message from Teljoy client: %s" % msg

  print data(TJParams(status))                    #Teljoy parameters
  print "<br>"
  print AddObjURL(status)
  print Exits()
  print HTMLtrailer



